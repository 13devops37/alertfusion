QID,IP,Network,DNS,NetBIOS,QG Host ID,IP Interfaces,Tracking Method,OS,IP Status,Title,Vuln Status,Type,Severity,Port,Protocol,FQDN,SSL,First Detected,Last Detected,Times Detected,Date Last Fixed,CVE ID,Vendor Reference,Bugtraq ID,Threat,Impact,Solution,Exploitability,Results,PCI Vuln,Ticket State,Instance,Category,QDS,ARS,ACS,TruRisk Score_x,Title_y,Severity_y,KB Severity,Type Detected,Last Detected_y,First Detected_y,Protocol_y,Port_y,Status,Asset Id,Asset Name,Asset IPV4,Asset IPV6,Solution_y,Asset Tags,Disabled,Ignored,QDS_y,QDS Severity,Detection AGE,Published Date,Patch Released,Category_y,RTI,Operating System,Last Fixed,Last Reopened,Times Detected_y,Threat_y,Vuln Patchable,Asset Critical Score,TruRisk Score,Vulnerability Tags,Results_y
82005,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38173,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate
"
38173,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate
"
38173,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate
"
38173,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate
"
38173,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate
"
38173,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate
"
45002,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
GuestLTIM 90266
"
45002,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.79,Global Default Network,azrcisvdwvmdr12.internal.cloudapp.net,AZRCISVDWVMDR12,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:00,12/18/2023 14:24:00,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
38794,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38657,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
RC2-CBC-MD5 RSA RSA MD5 RC2(128) MEDIUM
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
DES-CBC-MD5 RSA RSA MD5 DES(56) LOW
DES-CBC3-MD5 RSA RSA MD5 3DES(168) MEDIUM
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
"
38657,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38628,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38173,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate
"
38173,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate
"
38173,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate
"
38173,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate
"
38173,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate
"
38173,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate
"
45002,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
GuestLTIM 90266
"
45002,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.78,Global Default Network,azrcisvdwvmdr11.internal.cloudapp.net,AZRCISVDWVMDR11,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:23,12/18/2023 14:24:23,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
38794,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38657,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
RC2-CBC-MD5 RSA RSA MD5 RC2(128) MEDIUM
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
DES-CBC-MD5 RSA RSA MD5 DES(56) LOW
DES-CBC3-MD5 RSA RSA MD5 3DES(168) MEDIUM
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
"
38657,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38628,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38173,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate
"
38173,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate
"
38173,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate
"
38173,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate
"
38173,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate
"
38173,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate
"
45002,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
GuestLTIM 90266
"
45002,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.77,Global Default Network,azrcisvdwvmdr10.internal.cloudapp.net,AZRCISVDWVMDR10,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:25:05,12/18/2023 14:25:05,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
38794,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38657,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
RC2-CBC-MD5 RSA RSA MD5 RC2(128) MEDIUM
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
DES-CBC-MD5 RSA RSA MD5 DES(56) LOW
DES-CBC3-MD5 RSA RSA MD5 3DES(168) MEDIUM
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
"
38657,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38628,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38173,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate
"
38173,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate
"
38173,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate
"
38173,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate
"
38173,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate
"
38173,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate
"
45002,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
GuestLTIM 90266
"
45002,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.76,Global Default Network,azrcisvdwvmdr09.internal.cloudapp.net,AZRCISVDWVMDR09,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:15,12/18/2023 14:24:15,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
38794,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38657,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
RC2-CBC-MD5 RSA RSA MD5 RC2(128) MEDIUM
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
DES-CBC-MD5 RSA RSA MD5 DES(56) LOW
DES-CBC3-MD5 RSA RSA MD5 3DES(168) MEDIUM
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
"
38657,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38628,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38173,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate
"
38173,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate
"
38173,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate
"
38173,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate
"
38173,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate
"
38173,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate
"
45002,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
GuestLTIM 90266
"
45002,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.75,Global Default Network,azrcisvdwvmdr08.internal.cloudapp.net,AZRCISVDWVMDR08,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:39,12/18/2023 14:24:39,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
LTINOGUEST	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183","Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.#",no,,,TCP/IP,37,50,2,50,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
38794,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38794,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"The scan target supports version 1.1 of the TLS protocol. That version is in the process of being deprecated and is no longer recommended. Instead the newer versions 1.2 and/or 1.3 should be used. The TLSv1.1 protocol itself does not have any currently exploitable vulnerabilities. However some vendor implementations of TLSv1.1 have weaknesses which may be exploitable. 
This QID is posted as potential, when servers require client certificates and we cannot complete the handshake. 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.","Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1",,TLSv1.1 is supported#,no,,,General remote services,25,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server Supports Transport Layer Security (TLSv1.1),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
(Disable the use of TLSv1.1 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1_1

If the test is successful, then the target support TLSv1.1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,25,LOW,164,"Jan 22, 2021",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"Supporting TLSv1.1 by itself does not necessarily have any harmful consequences, but it is no longer considered best practice because of bad past experience with some vendor implementations of TLSv1.1.",No,4,50,,"TLSv1.1 is supported
"
38657,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,2,344,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
SSLv2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
RC2-CBC-MD5 RSA RSA MD5 RC2(128) MEDIUM
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
DES-CBC-MD5 RSA RSA MD5 DES(56) LOW
DES-CBC3-MD5 RSA RSA MD5 3DES(168) MEDIUM
SSLv3_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
EXP-RC2-CBC-MD5 RSA(512) RSA MD5 RC2(40) LOW
EXP-DES-CBC-SHA RSA(512) RSA SHA1 DES(40) LOW
DES-CBC-SHA RSA RSA SHA1 DES(56) LOW
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
EXP-EDH-RSA-DES-CBC-SHA DH(512) RSA SHA1 DES(40) LOW
EDH-RSA-DES-CBC-SHA DH RSA SHA1 DES(56) LOW
EDH-RSA-DES-CBC3-SHA DH RSA SHA1 3DES(168) MEDIUM
EXP-ADH-DES-CBC-SHA DH(512) None SHA1 DES(40) LOW
ADH-DES-CBC-SHA DH None SHA1 DES(56) LOW
ADH-DES-CBC3-SHA DH None SHA1 3DES(168) MEDIUM
"
38657,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38657,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,CVE-2016-2183,,"92630, 95568","Legacy block ciphers having block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. 
All versions of SSL/TLS protocol support cipher suites which use DES, 3DES, IDEA or RC2 as the symmetric encryption cipher are affected. 

Note: This CVE is patched at following versions 
OPENSSL-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-0.9.8J-0.102.2 
LIBOPENSSL0_9_8-32BIT-0.9.8J-0.102.2 
OPENSSL1-1.0.1G-0.52.1 
OPENSSL1-DOC-1.0.1G-0.52.1 
LIBOPENSSL1_0_0-1.0.1G-0.52.1 
LIBOPENSSL1-DEVEL-1.0.1G-0.52.1 
JAVA-1_6_0-IBM-1.6.0_SR16.41-81.1",Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers. 
More information can be found at  Sweet32 (https://sweet32.info/), Microsoft Windows TLS changes docs (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server) and Microsoft Transport Layer Security (TLS) registry settings (https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","Source: exploitdb
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Heap Buffer Overflow
Link:https://www.exploit-db.com/exploits/42091

Source: packetstorm
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server DLL Injection / Code Execution
Link:https://packetstormsecurity.com/files/142756/IBM-Informix-Dynamic-Server-DLL-Injection-Code-Execution.html

Source: 0day.today
Reference:CVE-2016-2183
Description:IBM Informix Dynamic Server / Informix Open Admin Tool - DLL Injection / Remote Code Execution / Hea
Link:https://0day.today/exploit/27866","CIPHER	KEY-EXCHANGE	AUTHENTICATION	MAC	ENCRYPTION(KEY-STRENGTH)	GRADE
TLSv1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.1 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM
TLSv1.2 WITH 64-BIT CBC CIPHERS IS SUPPORTED	 	 	 	 	 
DES-CBC3-SHA	RSA	RSA	SHA1	3DES(168)	MEDIUM#",no,,,General remote services,42,50,2,50,Birthday attacks against TLS ciphers with 64bit block size vulnerability (Sweet32),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable and stop using DES, 3DES, IDEA or RC2 ciphers.
More information can be found at  Sweet32, Microsoft Windows TLS changes docs and Microsoft Transport Layer Security (TLS) registry settings(Disable and stop using DES, 3DES, IDEA or RC2 ciphers.<BR>
https://docs.microsoft.com/en-us/windows-server/security/tls/tls-registry-settings)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Mar 30, 2017",'-,General remote services,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Remote attackers can obtain cleartext data via a birthday attack against a long-duration encrypted session.,No,4,50,,"#table cols=""6""
CIPHER KEY-EXCHANGE AUTHENTICATION MAC ENCRYPTION(KEY-STRENGTH) GRADE
TLSv1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.1_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
TLSv1.2_WITH_64-BIT_CBC_CIPHERS_IS_SUPPORTED _ _ _ _ _
DES-CBC3-SHA RSA RSA SHA1 3DES(168) MEDIUM
"
38628,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team",No,No,30,LOW,162,"Jul 6, 2016",'-,General remote services,Patch Not Available,Ubuntu Linux 8.04,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,2,344,,"TLSv1.0 is supported
"
38628,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
38628,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),New,Vuln,3,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,Deprecating TLS 1.0 and TLS 1.1,,"TLS is capable of using a multitude of ciphers (algorithms) to create the public and private key pairs. 
For example if TLSv1.0 uses either the RC4 stream cipher, or a block cipher in CBC mode. 
RC4 is known to have biases and the block cipher in CBC mode is vulnerable to the POODLE attack. 

TLSv1.0, if configured to use the same cipher suites as SSLv3, includes a means by which a TLS implementation can downgrade the connection to SSL v3.0, thus weakening security. 

A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade. 

  This QID is an automatic PCI FAIL in accordance with the PCI standards.  

Further details can be found under:  
PCI: ASV Program Guide v3.1 (page 27) (https://www.pcisecuritystandards.org/documents/ASV_Program_Guide_v3.1.pdf) 
PCI: Use of SSL Early TLS and ASV Scans (https://www.pcisecuritystandards.org/documents/Use-of-SSL-Early-TLS-and-ASV-Scans.pdf)
 
 

NOTE: On March 31, 2021 Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) are formally deprecated.
Refer to Deprecating TLS 1.0 and TLS 1.1 (https://tools.ietf.org/html/rfc8996)","An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications. 
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages. 
A POODLE-type (https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls) attack could also be launched directly at TLS without negotiating a downgrade.","Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1",,TLSv1.0 is supported#,yes,,,General remote services,30,50,2,50,Secure Sockets Layer/Transport Layer Security (SSL/TLS) Server supports Transport Layer Security (TLSv1.0),3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
(Disable the use of TLSv1.0 protocol in favor of a cryptographically stronger protocol such as TLSv1.2.
The following openssl commands can be used to do a manual test:
openssl s_client -connect ip:port -tls1

If the test is successful, then the target support TLSv1
)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,30,LOW,164,"Jul 6, 2016",'-,General remote services,Patch Not Available,Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"An attacker can exploit cryptographic flaws to conduct man-in-the-middle type attacks or to decryption communications.<P>
For example: An attacker could force a downgrade from the TLS protocol to the older SSLv3.0 protocol and exploit the POODLE vulnerability, read secure communications or maliciously modify messages.<P>
<A HREF=""https://blog.qualys.com/ssllabs/2014/12/08/poodle-bites-tls"" TARGET=""_blank"">A POODLE-type</A> attack could also be launched directly at TLS without negotiating a downgrade.<P>

",No,4,50,,"TLSv1.0 is supported
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]#",yes,,,TCP/IP,42,50,2,50,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38173,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,5432,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,25,NEW,34450843,metasploitable.localdomain,10.198.80.80,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team",No,No,50,MEDIUM,162,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,2,344,,"Certificate #0 emailAddress=root@ubuntu804-base.localdomain,CN=ubuntu804-base.localdomain,OU=Office_for_Complication_of_Otherwise_Simple_Affairs,O=OCOSA,L=Everywhere,ST=There_is_no_such_thing_outside_US,C=XX self signed certificate
"
38173,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR10 self signed certificate
"
38173,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate
"
38173,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR08 self signed certificate
"
38173,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR11 self signed certificate
"
38173,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR09 self signed certificate
"
38173,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",SSL Certificate - Signature Verification Failed Vulnerability,New,Vuln,2,3389,tcp,,over ssl,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"An SSL Certificate associates an entity (person, organization, host, etc.) with a Public Key. In an SSL connection, the client authenticates the remote server using the server's Certificate and extracts the Public Key in the Certificate to establish the secure connection. The authentication is done by verifying that the public key in the certificate is signed by a trusted third-party Certificate Authority.
 
If a client is unable to verify the certificate, it can abort communication or prompt the user to continue the communication without authentication.","By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
 
Exception: 
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",Please install a server certificate signed by a trusted third-party Certificate Authority.,,Certificate #0 CN=AZRCISVDWVMDR07 self signed certificate#,yes,,,General remote services,50,50,2,50,SSL Certificate - Signature Verification Failed Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,3389,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,Please install a server certificate signed by a trusted third-party Certificate Authority.(Please install a server certificate signed by a trusted third-party Certificate Authority.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 30, 2003",'-,General remote services,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"By exploiting this vulnerability, man-in-the-middle attacks in tandem with DNS cache poisoning can occur.
<P>
Exception:<BR>
If the server communicates only with a restricted set of clients who have the server certificate or the trusted CA certificate, then the server or CA certificate may not be available publicly, and the scan will be unable to verify the signature.",No,4,50,,"Certificate #0 CN=AZRCISVDWVMDR12 self signed certificate
"
45002,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
GuestLTIM	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
GuestLTIM	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
GuestLTIM 90266
"
45002,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
GuestLTIM	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
GuestLTIM	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
GuestLTIM	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
45002,10.198.80.74,Global Default Network,azrcisvdwvmdr07.internal.cloudapp.net,AZRCISVDWVMDR07,,,IP,Windows Server 2019 Datacenter Version 1809 Build 17763,"host scanned, found vuln",Global User List Found Using Other QIDS,New,Practice,2,,,,,12/18/2023 14:24:44,12/18/2023 14:24:44,1,,,,,"This is the global system user list, which was retrieved during the scan by exploiting one or more vulnerabilities or via authentication provided by user. The Qualys IDs for the vulnerabilities leading to the disclosure of these users are also given in the Result section. Each user will be displayed only once, even though it may be obtained by using different methods. 
Note: We did not exploit any vulnerabilities to gather this information in QID 90266, 45027 or 45032.",These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.,"To prevent your host from being attacked, do one or more of the following:
 
 Remove (or rename) unnecessary accounts
 Shutdown unnecessary network services
 Ensure the passwords to these accounts are kept secret
 Use a firewall to restrict access to your hosts from unauthorized domains",,"User Name	Source Vulnerability (QualysID)
cloudadmin	45032
GuestLTIM	90266#",yes,,,Information gathering,50,50,2,50,Global User List Found Using Other QIDS,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"To prevent your host from being attacked, do one or more of the following:

Remove (or rename) unnecessary accounts
Shutdown unnecessary network services
Ensure the passwords to these accounts are kept secret
Use a firewall to restrict access to your hosts from unauthorized domains

(To prevent your host from being attacked, do one or more of the following:
<UL>
<LI>Remove (or rename) unnecessary accounts
<LI>Shutdown unnecessary network services
<LI>Ensure the passwords to these accounts are kept secret
<LI>Use a firewall to restrict access to your hosts from unauthorized domains
</UL>
<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,50,MEDIUM,164,"Jan 1, 1999",'-,Information gathering,"Easy Exploit,Patch Not Available",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"These common account(s) can be used by a malicious user to break-in the system via password bruteforcing.<P>
",No,4,50,,"#table cols=""2""
User_Name Source_Vulnerability_(QualysID)
cloudadmin 45032
LTINOGUEST 90266
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38909,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,167,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,5,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,492,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,22,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team",No,No,45,MEDIUM,162,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,2,344,,"#table cols=""2""
Type Name
key_exchange diffie-hellman-group-exchange-sha1
key_exchange diffie-hellman-group14-sha1
key_exchange diffie-hellman-group1-sha1
host_key ssh-rsa
host_key ssh-dss
MAC hmac-sha1
MAC hmac-sha1-96
"
38909,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38896,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,167,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,5,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,492,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.72,Global Default Network,azrcisvdlvmdr05.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:00,12/18/2023 15:11:00,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38909,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,167,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,5,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,492,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,22,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team",No,No,45,MEDIUM,162,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,2,344,,"#table cols=""2""
Type Name
key_exchange diffie-hellman-group-exchange-sha1
key_exchange diffie-hellman-group14-sha1
key_exchange diffie-hellman-group1-sha1
host_key ssh-rsa
host_key ssh-dss
MAC hmac-sha1
MAC hmac-sha1-96
"
38909,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38896,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,167,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,5,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,492,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.71,Global Default Network,azrcisvdlvmdr04.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:38,12/18/2023 15:11:38,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38909,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,167,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,5,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,492,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,22,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team",No,No,45,MEDIUM,162,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,2,344,,"#table cols=""2""
Type Name
key_exchange diffie-hellman-group-exchange-sha1
key_exchange diffie-hellman-group14-sha1
key_exchange diffie-hellman-group1-sha1
host_key ssh-rsa
host_key ssh-dss
MAC hmac-sha1
MAC hmac-sha1-96
"
38909,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38896,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,167,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,5,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,492,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
115284,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",IP Forwarding Enabled,New,Practice,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,56,2,56,IP Forwarding Enabled,2,2,Potential,"May 9, 2024","Dec 20, 2023",'-,'-,ACTIVE,34520172,metasploitable3-ub1404,"10.0.2.15,172.17.0.1,172.28.128.3","fe80:0:0:0:42:25ff:fe58:6144,fe80:0:0:0:a00:27ff:fe42:5179,fe80:0:0:0:a00:27ff:fea2:fe21,fe80:0:0:0:5c7d:faff:fe2c:40a0","Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","Cloud Agent,IMF,RiskSense,Linux Team",No,No,35,LOW,162,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 14.04,'-,'-,5,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,2,341,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
115284,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",IP Forwarding Enabled,New,Practice,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,56,2,56,IP Forwarding Enabled,2,2,Potential,"May 9, 2024","Dec 18, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,164,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,3,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,4,492,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
115284,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",IP Forwarding Enabled,New,Practice,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,56,2,56,IP Forwarding Enabled,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,164,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,1,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,4,56,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
115284,10.198.80.70,Global Default Network,azrcisvdlvmdr03.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.1,"host scanned, found vuln",IP Forwarding Enabled,New,Practice,2,,,,,12/18/2023 15:10:57,12/18/2023 15:10:57,1,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,56,2,56,IP Forwarding Enabled,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,164,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,4,56,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,New,Vuln,3,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,56,2,56,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,New,Vuln,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]#",yes,,,TCP/IP,42,56,2,56,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38909,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,167,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,5,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,492,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,22,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team",No,No,45,MEDIUM,162,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,2,344,,"#table cols=""2""
Type Name
key_exchange diffie-hellman-group-exchange-sha1
key_exchange diffie-hellman-group14-sha1
key_exchange diffie-hellman-group1-sha1
host_key ssh-rsa
host_key ssh-dss
MAC hmac-sha1
MAC hmac-sha1-96
"
38909,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,New,Vuln,2,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,56,2,56,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38896,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,167,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,5,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,492,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,New,Practice,5,22,tcp,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,56,2,56,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
115284,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",IP Forwarding Enabled,New,Practice,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,56,2,56,IP Forwarding Enabled,2,2,Potential,"May 9, 2024","Dec 20, 2023",'-,'-,ACTIVE,34520172,metasploitable3-ub1404,"10.0.2.15,172.17.0.1,172.28.128.3","fe80:0:0:0:42:25ff:fe58:6144,fe80:0:0:0:a00:27ff:fe42:5179,fe80:0:0:0:a00:27ff:fea2:fe21,fe80:0:0:0:5c7d:faff:fe2c:40a0","Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","Cloud Agent,IMF,RiskSense,Linux Team",No,No,35,LOW,162,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 14.04,'-,'-,5,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,2,341,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
115284,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",IP Forwarding Enabled,New,Practice,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,56,2,56,IP Forwarding Enabled,2,2,Potential,"May 9, 2024","Dec 18, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,164,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,3,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,4,492,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
115284,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",IP Forwarding Enabled,New,Practice,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,56,2,56,IP Forwarding Enabled,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,164,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,1,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,4,56,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
115284,10.198.80.69,Global Default Network,azrcisvdlvmdr02.internal.cloudapp.net,,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",IP Forwarding Enabled,New,Practice,2,,,,,12/18/2023 15:11:15,12/18/2023 15:11:15,1,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,56,2,56,IP Forwarding Enabled,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,164,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,4,56,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
379106,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Apache Struts2 Remote Code Execution (S2-066),New,Vuln,4,,,,,05-09-2024 11:39,05-09-2024 11:39,1,,CVE-2023-50164,S2-066,,"Apache Struts is an open-source Model-View-Controller (MVC) framework for creating elegant, modern Java web applications. 
An unauthenticated, remote attacker could exploit this vulnerability by manipulating file upload parameters to enable a path traversal condition. Uploading a malicious file by leveraging this vulnerability could lead to execution of malicious code on the targeted system. 
Affected Software: 
Struts 2.0.0 - Struts 2.3.37 (EOL) 
Struts 2.5.0 - Struts 2.5.32 
Struts 6.0.0 - Struts 6.3.0 

QID Detection Logic (Unix):
Linux: Detection relies on ps command, find command, and locate command to locate struts jar file. Struts file name includes the version. 
This QID for Linux authentication will check for all Apache struts affected versions including End-of-Life (EOL). 

QID Detection Logic (Windows):
This QID retrieves the Tomcat installation location from the registry and checks for the 'struts2-rest-showcase' application directory in the webapps for the struts jar file. Please note that this QID can check only the mentioned directory for the struts jar file. This QID supports only Tomcat 10.1, Tomcat 9.0 and Tomcat 8.5 installations. 
This QID for Windows authentication will not check for Apache struts End Of Life (EOL) versions.","Successful exploitation allows an unauthenticated, remote attacker to execute arbitrary code on the targeted system.","Customers are advised to upgrade Apache Struts to 2.5.33, 6.3.0.2 or greater. Please refer to the S2-066 (https://cwiki.apache.org/confluence/display/WW/S2-066) advisory for more information pertaining to this vulnerability.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  S2-066 (https://cwiki.apache.org/confluence/display/WW/S2-066)","Source: github-exploits
Reference:CVE-2023-50164
Description:bcdannyboy/CVE-2023-50164 exploit repository
Link:https://github.com/bcdannyboy/CVE-2023-50164
Reference:CVE-2023-50164
Description:dwisiswant0/cve-2023-50164-poc exploit repository
Link:https://github.com/dwisiswant0/cve-2023-50164-poc
Reference:CVE-2023-50164
Description:snyk-labs/CVE-2023-50164-POC exploit repository
Link:https://github.com/snyk-labs/CVE-2023-50164-POC
Reference:CVE-2023-50164
Description:AsfandAliMemon25/CVE-2023-50164Analysis- exploit repository
Link:https://github.com/AsfandAliMemon25/CVE-2023-50164Analysis-

Source: blogs
Reference:CVE-2023-50164
Description:Technical Analysis
Link:https://attackerkb.com/topics/pe3CCtOE81/cve-2023-50164/rapid7-analysis

Source: gitlab-exploits
Reference:CVE-2023-50164
Description:Hamdane10/cve-2023-50164 exploit repository
Link:https://gitlab.com/Hamdane10/cve-2023-50164

Source: saint
Reference:CVE-2023-50164
Description:Apache Struts file upload directory traversal
Link:https://my.saintcorporation.com/cgi-bin/exploit_info/struts_upload_trav

Source: coreimpact
Reference:CVE-2023-50164
Description:Apache Struts 2 File Upload Path Traversal Remote Code Execution Exploit
Link:https://www.coresecurity.com/core-labs/exploits

Source: vulncheck-initial-access
Reference:CVE-2023-50164
Description:Struts Path Traversal RCE
Link:https://api.vulncheck.com/v3/index/initial-access?cve=CVE-2023-50164","/var/lib/docker/overlay2/274f6d183390556bbbe78b51be77e5cf67f4e47a25c97118015aecc2bf9fbd4b/diff/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
/var/lib/docker/overlay2/l/KXC4BPNP3WZ377QJ2Z6H674CXD/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
/var/lib/docker/overlay2/274f6d183390556bbbe78b51be77e5cf67f4e47a25c97118015aecc2bf9fbd4b/diff/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
/var/lib/docker/overlay2/l/KXC4BPNP3WZ377QJ2Z6H674CXD/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar#",yes,,,Local,95,492,4,492,Apache Struts2 Remote Code Execution (S2-066),4,4,Confirmed,"May 9, 2024","Dec 21, 2023",'-,'-,ACTIVE,34520172,metasploitable3-ub1404,"10.0.2.15,172.17.0.1,172.28.128.3","fe80:0:0:0:42:25ff:fe58:6144,fe80:0:0:0:a00:27ff:fe42:5179,fe80:0:0:0:a00:27ff:fea2:fe21,fe80:0:0:0:5c7d:faff:fe2c:40a0","Customers are advised to upgrade Apache Struts to 2.5.33, 6.3.0.2 or greater. Please refer to the S2-066 advisory for more information pertaining to this vulnerability.(https://cwiki.apache.org/confluence/display/WW/S2-066)","Cloud Agent,IMF,RiskSense,Linux Team",No,No,95,CRITICAL,161,"Dec 8, 2023","Dec 4, 2023",Local,"Public Exploit,Remote Code Execution",Ubuntu Linux 14.04,'-,'-,4,"Successful exploitation allows an unauthenticated, remote attacker to execute arbitrary code on the targeted system.<P>",No,2,341,,"/opt/apache_continuum/apache-continuum-1.4.2/apps/continuum/WEB-INF/lib/struts2-core-2.3.16.3.jar
"
379106,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Apache Struts2 Remote Code Execution (S2-066),New,Vuln,4,,,,,05-09-2024 11:39,05-09-2024 11:39,1,,CVE-2023-50164,S2-066,,"Apache Struts is an open-source Model-View-Controller (MVC) framework for creating elegant, modern Java web applications. 
An unauthenticated, remote attacker could exploit this vulnerability by manipulating file upload parameters to enable a path traversal condition. Uploading a malicious file by leveraging this vulnerability could lead to execution of malicious code on the targeted system. 
Affected Software: 
Struts 2.0.0 - Struts 2.3.37 (EOL) 
Struts 2.5.0 - Struts 2.5.32 
Struts 6.0.0 - Struts 6.3.0 

QID Detection Logic (Unix):
Linux: Detection relies on ps command, find command, and locate command to locate struts jar file. Struts file name includes the version. 
This QID for Linux authentication will check for all Apache struts affected versions including End-of-Life (EOL). 

QID Detection Logic (Windows):
This QID retrieves the Tomcat installation location from the registry and checks for the 'struts2-rest-showcase' application directory in the webapps for the struts jar file. Please note that this QID can check only the mentioned directory for the struts jar file. This QID supports only Tomcat 10.1, Tomcat 9.0 and Tomcat 8.5 installations. 
This QID for Windows authentication will not check for Apache struts End Of Life (EOL) versions.","Successful exploitation allows an unauthenticated, remote attacker to execute arbitrary code on the targeted system.","Customers are advised to upgrade Apache Struts to 2.5.33, 6.3.0.2 or greater. Please refer to the S2-066 (https://cwiki.apache.org/confluence/display/WW/S2-066) advisory for more information pertaining to this vulnerability.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  S2-066 (https://cwiki.apache.org/confluence/display/WW/S2-066)","Source: github-exploits
Reference:CVE-2023-50164
Description:bcdannyboy/CVE-2023-50164 exploit repository
Link:https://github.com/bcdannyboy/CVE-2023-50164
Reference:CVE-2023-50164
Description:dwisiswant0/cve-2023-50164-poc exploit repository
Link:https://github.com/dwisiswant0/cve-2023-50164-poc
Reference:CVE-2023-50164
Description:snyk-labs/CVE-2023-50164-POC exploit repository
Link:https://github.com/snyk-labs/CVE-2023-50164-POC
Reference:CVE-2023-50164
Description:AsfandAliMemon25/CVE-2023-50164Analysis- exploit repository
Link:https://github.com/AsfandAliMemon25/CVE-2023-50164Analysis-

Source: blogs
Reference:CVE-2023-50164
Description:Technical Analysis
Link:https://attackerkb.com/topics/pe3CCtOE81/cve-2023-50164/rapid7-analysis

Source: gitlab-exploits
Reference:CVE-2023-50164
Description:Hamdane10/cve-2023-50164 exploit repository
Link:https://gitlab.com/Hamdane10/cve-2023-50164

Source: saint
Reference:CVE-2023-50164
Description:Apache Struts file upload directory traversal
Link:https://my.saintcorporation.com/cgi-bin/exploit_info/struts_upload_trav

Source: coreimpact
Reference:CVE-2023-50164
Description:Apache Struts 2 File Upload Path Traversal Remote Code Execution Exploit
Link:https://www.coresecurity.com/core-labs/exploits

Source: vulncheck-initial-access
Reference:CVE-2023-50164
Description:Struts Path Traversal RCE
Link:https://api.vulncheck.com/v3/index/initial-access?cve=CVE-2023-50164","/var/lib/docker/overlay2/274f6d183390556bbbe78b51be77e5cf67f4e47a25c97118015aecc2bf9fbd4b/diff/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
/var/lib/docker/overlay2/l/KXC4BPNP3WZ377QJ2Z6H674CXD/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
/var/lib/docker/overlay2/274f6d183390556bbbe78b51be77e5cf67f4e47a25c97118015aecc2bf9fbd4b/diff/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
/var/lib/docker/overlay2/l/KXC4BPNP3WZ377QJ2Z6H674CXD/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar#",yes,,,Local,95,492,4,492,Apache Struts2 Remote Code Execution (S2-066),4,4,Confirmed,"May 9, 2024","May 9, 2024",'-,'-,NEW,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Customers are advised to upgrade Apache Struts to 2.5.33, 6.3.0.2 or greater. Please refer to the S2-066 advisory for more information pertaining to this vulnerability.(https://cwiki.apache.org/confluence/display/WW/S2-066)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,95,CRITICAL,22,"Dec 8, 2023","Dec 4, 2023",Local,"Public Exploit,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,1,"Successful exploitation allows an unauthenticated, remote attacker to execute arbitrary code on the targeted system.<P>",No,4,492,,"/var/lib/docker/overlay2/274f6d183390556bbbe78b51be77e5cf67f4e47a25c97118015aecc2bf9fbd4b/diff/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
 /var/lib/docker/overlay2/l/KXC4BPNP3WZ377QJ2Z6H674CXD/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
 /var/lib/docker/overlay2/274f6d183390556bbbe78b51be77e5cf67f4e47a25c97118015aecc2bf9fbd4b/diff/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
 /var/lib/docker/overlay2/l/KXC4BPNP3WZ377QJ2Z6H674CXD/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/struts2-core-2.0.8.jar
"
38913,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SSH Prefix Truncation Vulnerability (Terrapin),New,Vuln,4,22,tcp,,,05-09-2024 11:39,05-09-2024 11:39,1,,CVE-2023-48795,OpenSSH Advisory,,"The Terrapin attack exploits weaknesses in the SSH transport layer protocol in combination with newer cryptographic algorithms and encryption modes introduced by OpenSSH over 10 years ago. Since then, these have been adopted by a wide range of SSH implementations, therefore affecting a majority of current implementations.  

QID Detection Logic (Unauthenticated): 
This  detection attempts to start the SSH key exchange process and examines whether either of the vulnerable ChaCha20-Poly1305 Algorithm or CBC-EtM Algorithm is active. It subsequently verifies whether Strict Key Exchange is enabled. If a target is identified as vulnerable, it indicates that the target supports either of the vulnerable algorithms and lacks support for Strict Key Exchange.","Successful exploitation of the vulnerability may allow an attacker to downgrade the security of an SSH connection when using SSH extension negotiation. The impact in practice heavily depends on the supported extensions. Most commonly, this will impact the security of client authentication when using an RSA public key.","Customers are advised to refer to the individual vendor advisory for their operating system and install the patch released by the vendor. For more information regarding the vulnerability, please refer to  Terrapin Vulnerability  (https://terrapin-attack.com/) 
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  OpenWall Security Advisory (https://www.openwall.com/lists/oss-security/2023/12/20/3)","Source: nist-nvd2
Reference:CVE-2023-48795
Description:The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the ha
Link:https://www.terrapin-attack.com

Source: packetstorm
Reference:CVE-2023-48795
Description:Terrapin SSH Connection Weakening
Link:https://packetstormsecurity.com/files/176280/Terrapin-SSH-Connection-Weakening.html

Source: nuclei-templates
Reference:CVE-2023-48795
Description:Nuclei template for CVE-2023-48795
Link:https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/javascript/cves/2023/CVE-2023-48795.yaml","SSH Prefix Truncation Vulnerability (Terrapin) detected on port: 22
ChaCha20-Poly1305 Algorithm Support: True
CBC-EtM Algorithm Support: False
Strict Key Exchange algorithm enabled: False#",yes,,,General remote services,37,492,4,492,SSH Prefix Truncation Vulnerability (Terrapin),4,4,Confirmed,"May 9, 2024","May 9, 2024",TCP,22,NEW,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Customers are advised to refer to the individual vendor advisory for their operating system and install the patch released by the vendor. For more information regarding the vulnerability, please refer to  Terrapin Vulnerability (https://terrapin-attack.com/)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,22,"Dec 28, 2023","Dec 20, 2023",General remote services,"Easy Exploit,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,"Successful exploitation of the vulnerability may allow an attacker to downgrade the security of an SSH connection when using SSH extension negotiation. The impact in practice heavily depends on the supported extensions. Most commonly, this will impact the security of client authentication when using an RSA public key. <P>",No,4,492,,"SSH Prefix Truncation Vulnerability (Terrapin) detected on port: 22
ChaCha20-Poly1305 Algorithm Support: True
CBC-EtM Algorithm Support: False
Strict Key Exchange algorithm enabled: False
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,167,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,5,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,492,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team",No,No,37,LOW,162,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 8.04,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,2,344,,"Tested on port 111 with an injected SYN/RST offset by 16 bytes.
Tested on port 21 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Ubuntu Linux 22.04.1,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,56,,"Tested on port 22 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82054,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",TCP Sequence Number Approximation Based Denial of Service,Active,Vuln,3,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2004-0230,,10183,"TCP provides stateful communications between hosts on a network. TCP sessions are established by a three-way handshake and use random 32-bit sequence and acknowledgement numbers to ensure the validity of traffic. A vulnerability was reported that may permit TCP sequence numbers to be more easily approximated by remote attackers. This issue affects products released by multiple vendors.  
 
The cause of the vulnerability is that affected implementations will accept TCP sequence numbers within a certain range, known as the acknowledgement range, of the expected sequence number for a packet in the session. This is determined by the TCP window size, which is negotiated during the three-way handshake for the session. Larger TCP window sizes may be set to allow for more throughput, but the larger the TCP window size, the more probable it is to guess a TCP sequence number that falls within an acceptable range. It was initially thought that guessing an acceptable sequence number was relatively difficult for most implementations given random distribution, making this type of attack impractical. However, some implementations may make it easier to successfully approximate an acceptable TCP sequence number, making these attacks possible with a number of protocols and implementations.
 
This is further compounded by the fact that some implementations may support the use of the TCP Window Scale Option, as described in RFC 1323, to extend the TCP window size to a maximum value of 1 billion.
 
This vulnerability will permit a remote attacker to inject a SYN or RST packet into the session, causing it to be reset and effectively allowing for denial of service attacks. An attacker would exploit this issue by sending a packet to a receiving implementation with an approximated sequence number and a forged source IP address and TCP port.
 
There are a few factors that may present viable target implementations, such as those which depend on long-lived TCP connections, those that have known or easily guessed IP address endpoints and those implementations with easily guessed TCP source ports. It has been noted that Border Gateway Protocol (BGP) is reported to be particularly vulnerable to this type of attack, due to the use of long-lived TCP sessions and the possibility that some implementations may use the TCP Window Scale Option. As a result, this issue is likely to affect a number of routing platforms.
 
Another factor to consider is the relative difficulty of injecting packets into TCP sessions, as a number of receiving implementations will reassemble packets in order, dropping any duplicates. This may make some implementations more resistant to attacks than others.
 
It should be noted that while a number of vendors have confirmed this issue in various products, investigations are ongoing and it is likely that many other vendors and products will turn out to be vulnerable as the issue is investigated further.",Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts.,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
 
Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP (http://packetstormsecurity.org/0404-advisories/246929.html) details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.
 
Refer to US-CERT Vulnerability Note VU#415294 (http://www.kb.cert.org/vuls/id/415294) and OSVDB Article 4030 (http://osvdb.org/4030) to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.
 
For Microsoft: Refer to MS05-019 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2005/ms05-019) and MS06-064 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064) for further details.
 
For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P (ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc)
 
For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14 (ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt)
 
For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 (http://www.kb.cert.org/vuls/id/JARL-5YGQAJ) to obtain additional details. Also, refer to TA04-111A (http://www.us-cert.gov/cas/techalerts/TA04-111A.html) for detailed mitigating strategies against these attacks.
 
For NetBSD: Refer to NetBSD-SA2004-006 (ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc)
 
For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml (http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml).
 
For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230 (https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230).
 
For Red Hat Linux: There is no fix available : Refer to  (https://access.redhat.com/security/cve/cve-2004-0230).
 






Workaround: The following BGP-specific workaround information has been provided.
 
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
 
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
 
Secure Cisco IOS BGP Template (http://www.cymru.com/Documents/secure-bgp-template.html)
 
JUNOS Secure BGP Template (http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","Source: The Exploit-DB
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019) - The Exploit-DB Ref : 942
Link:http://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset - The Exploit-DB Ref : 276
Link:http://www.exploit-db.com/exploits/276
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service - The Exploit-DB Ref : 291
Link:http://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1) - The Exploit-DB Ref : 24030
Link:http://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2) - The Exploit-DB Ref : 24031
Link:http://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3) - The Exploit-DB Ref : 24032
Link:http://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4) - The Exploit-DB Ref : 24033
Link:http://www.exploit-db.com/exploits/24033

Source: exploitdb
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (3)
Link:https://www.exploit-db.com/exploits/24032
Reference:CVE-2004-0230
Description:TCP Connection Reset - Remote Denial of Service
Link:https://www.exploit-db.com/exploits/291
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (4)
Link:https://www.exploit-db.com/exploits/24033
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (1)
Link:https://www.exploit-db.com/exploits/24030
Reference:CVE-2004-0230
Description:Multiple Vendor - TCP Sequence Number Approximation (2)
Link:https://www.exploit-db.com/exploits/24031
Reference:CVE-2004-0230
Description:Microsoft Windows - Malformed IP Options Denial of Service (MS05-019)
Link:https://www.exploit-db.com/exploits/942
Reference:CVE-2004-0230
Description:Microsoft Windows XP/2000 - TCP Connection Reset
Link:https://www.exploit-db.com/exploits/276

Source: packetstorm
Reference:CVE-2004-0230
Description:Kreset.pl
Link:https://packetstormsecurity.com/files/33182/Kreset.pl.html
Reference:CVE-2004-0230
Description:bgp-dosv2.pl
Link:https://packetstormsecurity.com/files/33174/bgp-dosv2.pl.html
Reference:CVE-2004-0230
Description:reset-tcp_rfc31337-compliant.c
Link:https://packetstormsecurity.com/files/33172/reset-tcp_rfc31337-compliant.c.html
Reference:CVE-2004-0230
Description:reset-tcp.c
Link:https://packetstormsecurity.com/files/33171/reset-tcp.c.html
Reference:CVE-2004-0230
Description:reset.zip
Link:https://packetstormsecurity.com/files/33153/reset.zip.html
Reference:CVE-2004-0230
Description:tcp_reset.c
Link:https://packetstormsecurity.com/files/33202/tcp_reset.c.html
Reference:CVE-2004-0230
Description:disconn.py
Link:https://packetstormsecurity.com/files/33185/disconn.py.html
Reference:CVE-2004-0230
Description:autoRST.c
Link:https://packetstormsecurity.com/files/33243/autoRST.c.html

Source: seebug
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (1)
Link:https://www.seebug.org/vuldb/ssvid-77768
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (3)
Link:https://www.seebug.org/vuldb/ssvid-77770
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (2)
Link:https://www.seebug.org/vuldb/ssvid-77769
Reference:CVE-2004-0230
Description:Multiple Vendor TCP Sequence Number Approximation Vulnerability (4)
Link:https://www.seebug.org/vuldb/ssvid-77771
Reference:CVE-2004-0230
Description:TCP Connection Reset Remote Exploit
Link:https://www.seebug.org/vuldb/ssvid-18409

Source: nvd
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183

Source: nist-nvd2
Reference:CVE-2004-0230
Description:TCP, when using a large Window Size, makes it easier for remote attackers to guess sequence numbers and cause a denial of service (connection loss) to persistent TCP connections by repeatedly injecting a TCP RST packet, especially in protocols that use long-lived connections, such as BGP.
Link:http://www.securityfocus.com/bid/10183",Tested on port 22 with an injected SYN/RST offset by 16 bytes.#,no,,,TCP/IP,37,492,4,492,TCP Sequence Number Approximation Based Denial of Service,3,3,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.

Various implementations and products including Check Point, Cisco, Cray Inc, Hitachi, Internet Initiative Japan, Inc (IIJ), Juniper Networks, NEC and Yamaha are currently undergoing review. Contact the vendors to obtain more information about affected products and fixes. NISCC Advisory 236929 - Vulnerability Issues in TCP details the vendor patch status as of the time of the advisory, and identifies resolutions and workarounds.

Refer to US-CERT Vulnerability Note VU#415294 and OSVDB Article 4030 to obtain a list of vendors affected by this issue and a note on resolutions (if any) provided by the vendor.

For Microsoft: Refer to MS05-019 and MS06-064 for further details.

For SGI IRIX: Refer to SGI Security Advisory 20040905-01-P

For SCO UnixWare 7.1.3 and 7.1.1: Refer to SCO Security Advisory SCOSA-2005.14

For Solaris (Sun Microsystems): The vendor has acknowledged the vulnerability; however a patch is not available. Refer to Sun Microsystems, Inc. Information for VU#415294 to obtain additional details. Also, refer to TA04-111A for detailed mitigating strategies against these attacks.

For NetBSD: Refer to NetBSD-SA2004-006

For Cisco: Refer to cisco-sa-20040420-tcp-ios.shtml.

For IBM : Refer to IBM-tcp-sequence-number-cve-2004-0230.

For Red Hat Linux: There is no fix available : Refer to .







Workaround:The following BGP-specific workaround information has been provided.

For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.

Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:

Secure Cisco IOS BGP Template

JUNOS Secure BGP Template(Please first check the results section below for the port number on which this vulnerability was detected. If that port number is known to be used for port-forwarding, then it is the backend host that is really vulnerable.
<P>
http://packetstormsecurity.org/0404-advisories/246929.html
<P>
http://osvdb.org/4030
<P>
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-064
<P>
ftp://patches.sgi.com/support/free/security/advisories/20040905-01-P.asc
<P>
ftp://ftp.sco.com/pub/updates/UnixWare/SCOSA-2005.14/SCOSA-2005.14.txt
<P>
http://www.us-cert.gov/cas/techalerts/TA04-111A.html
<P>
ftp://ftp.netbsd.org/pub/NetBSD/security/advisories/NetBSD-SA2004-006.txt.asc
<P>
http://www.cisco.com/warp/public/707/cisco-sa-20040420-tcp-ios.shtml
<P>
https://www.ibm.com/support/pages/tcp-sequence-number-approximation-based-denial-service-cve-2004-0230
<P>
https://access.redhat.com/security/cve/cve-2004-0230
<P>






Workaround:<BR>The following BGP-specific workaround information has been provided.
<P>
For BGP implementations that support it, the TCP MD5 Signature Option should be enabled. Passwords that the MD5 checksum is applied to should be set to strong values and changed on a regular basis.
<P>
Secure BGP configuration instructions have been provided for Cisco and Juniper at these locations:
<BR>
http://www.cymru.com/Documents/secure-bgp-template.html
<BR>
http://www.cymru.com/gillsr/documents/junos-bgp-template.pdf)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,37,LOW,164,"Apr 28, 2004",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,Successful exploitation of this issue could lead to denial of service attacks on the TCP based services of target hosts. ,No,4,50,,"Tested on port 135 with an injected SYN/RST offset by 16 bytes.
Tested on port 445 with an injected SYN/RST offset by 16 bytes.
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,167,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,5,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,492,,"Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",'-,'-,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team",No,No,42,MEDIUM,162,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 8.04,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,2,344,,"Constant changes in initial sequence numbers observed in 22 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1703067330.440455]  SEQ[1855104001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067330.447629]  SEQ[1855168001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067330.458946]  SEQ[1855232001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067330.467208]  SEQ[1855296001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067330.475901]  SEQ[1855360001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067330.484662]  SEQ[1855424001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067330.495463]  SEQ[1855488001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067330.502308]  SEQ[1855552001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067330.509881]  SEQ[1855616001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067330.520766]  SEQ[1855680001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067330.527857]  SEQ[1855744001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067330.537827]  SEQ[1855808001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067330.544702]  SEQ[1855872001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067330.553566]  SEQ[1855936001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067330.562561]  SEQ[1856000001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067330.570378]  SEQ[1856064001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067330.577672]  SEQ[1856128001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067330.588385]  SEQ[1856192001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067330.596996]  SEQ[1856256001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067330.604768]  SEQ[1856320001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067330.622853]  SEQ[1856384001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067330.638405]  SEQ[1856448001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067330.652105]  SEQ[1856512001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067330.660556]  SEQ[1856576001]  CHANGE[64000]  VARIATION[0]
Packet  1 : TIME[1703067521.242770]  SEQ[1901696001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1703067521.251722]  SEQ[1901760001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1703067521.259612]  SEQ[1901824001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1703067521.271783]  SEQ[1901888001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1703067521.279239]  SEQ[1901952001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1703067521.287360]  SEQ[1902016001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1703067521.294438]  SEQ[1902080001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1703067521.308723]  SEQ[1902144001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1703067521.327654]  SEQ[1902208001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1703067521.339178]  SEQ[1902272001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1703067521.348630]  SEQ[1902336001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1703067521.360198]  SEQ[1902400001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1703067521.371083]  SEQ[1902464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1703067521.394847]  SEQ[1902528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1703067521.406003]  SEQ[1902592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1703067521.432773]  SEQ[1902656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1703067521.450395]  SEQ[1902720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1703067521.468277]  SEQ[1902784001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1703067521.486588]  SEQ[1902848001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1703067521.503784]  SEQ[1902912001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1703067521.524845]  SEQ[1902976001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1703067521.554588]  SEQ[1903040001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1703067521.567227]  SEQ[1903104001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1703067521.576584]  SEQ[1903168001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 18 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888884.829606]  SEQ[442560001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888884.838241]  SEQ[442624001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888884.845745]  SEQ[442752001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888884.858222]  SEQ[442816001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888884.864442]  SEQ[442880001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888884.873265]  SEQ[442944001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888884.891234]  SEQ[443008001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888884.915435]  SEQ[443264001]  CHANGE[256000]  VARIATION[192000]
Packet  9 : TIME[1702888884.925297]  SEQ[443328001]  CHANGE[64000]  VARIATION[192000]
Packet 10 : TIME[1702888884.973186]  SEQ[443392001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888885. 37860]  SEQ[443456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888885. 46243]  SEQ[443648001]  CHANGE[192000]  VARIATION[128000]
Packet 13 : TIME[1702888885. 66134]  SEQ[443904001]  CHANGE[256000]  VARIATION[64000]
Packet 14 : TIME[1702888885. 78797]  SEQ[444032001]  CHANGE[128000]  VARIATION[128000]
Packet 15 : TIME[1702888885.107108]  SEQ[444224001]  CHANGE[192000]  VARIATION[64000]
Packet 16 : TIME[1702888885.154457]  SEQ[444672001]  CHANGE[448000]  VARIATION[256000]
Packet 17 : TIME[1702888885.168703]  SEQ[444800001]  CHANGE[128000]  VARIATION[320000]
Packet 18 : TIME[1702888885.178771]  SEQ[444864001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888885.192338]  SEQ[444928001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888885.203505]  SEQ[445056001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888885.213457]  SEQ[445120001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888885.232131]  SEQ[445184001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888885.246328]  SEQ[445248001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888885.260431]  SEQ[445504001]  CHANGE[256000]  VARIATION[192000]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.3,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888874.846059]  SEQ[419520001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888874.857045]  SEQ[419776001]  CHANGE[256000]  VARIATION[N/A]
Packet  3 : TIME[1702888874.864902]  SEQ[419840001]  CHANGE[64000]  VARIATION[192000]
Packet  4 : TIME[1702888874.873392]  SEQ[419904001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888874.879774]  SEQ[420032001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888874.889725]  SEQ[420096001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888874.895786]  SEQ[420160001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888874.933655]  SEQ[420224001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888874.942721]  SEQ[420288001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888874.984520]  SEQ[420352001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888875. 36612]  SEQ[420480001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888875. 48330]  SEQ[420736001]  CHANGE[256000]  VARIATION[128000]
Packet 13 : TIME[1702888875. 56636]  SEQ[420800001]  CHANGE[64000]  VARIATION[192000]
Packet 14 : TIME[1702888875. 79425]  SEQ[420864001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888875. 88301]  SEQ[420928001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888875.116274]  SEQ[421120001]  CHANGE[192000]  VARIATION[128000]
Packet 17 : TIME[1702888875.124961]  SEQ[421184001]  CHANGE[64000]  VARIATION[128000]
Packet 18 : TIME[1702888875.137006]  SEQ[421248001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888875.150222]  SEQ[421312001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888875.162194]  SEQ[421376001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888875.178620]  SEQ[421440001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888875.187288]  SEQ[421504001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888875.195309]  SEQ[421568001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888875.216278]  SEQ[421632001]  CHANGE[64000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 16 out of 23 events.
Packet  1 : TIME[1702888941.893462]  SEQ[532608001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.903599]  SEQ[532736001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.913437]  SEQ[532800001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888941.956348]  SEQ[533120001]  CHANGE[320000]  VARIATION[256000]
Packet  5 : TIME[1702888941.967406]  SEQ[533376001]  CHANGE[256000]  VARIATION[64000]
Packet  6 : TIME[1702888942. 81304]  SEQ[533632001]  CHANGE[256000]  VARIATION[0]
Packet  7 : TIME[1702888942.103722]  SEQ[534144001]  CHANGE[512000]  VARIATION[256000]
Packet  8 : TIME[1702888942.122415]  SEQ[534272001]  CHANGE[128000]  VARIATION[384000]
Packet  9 : TIME[1702888942.152533]  SEQ[534592001]  CHANGE[320000]  VARIATION[192000]
Packet 10 : TIME[1702888942.209238]  SEQ[534848001]  CHANGE[256000]  VARIATION[64000]
Packet 11 : TIME[1702888942.280252]  SEQ[535936001]  CHANGE[1088000]  VARIATION[832000]
Packet 12 : TIME[1702888942.291269]  SEQ[536064001]  CHANGE[128000]  VARIATION[960000]
Packet 13 : TIME[1702888942.312316]  SEQ[536128001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888942.332133]  SEQ[536192001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888942.346314]  SEQ[536320001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888942.429026]  SEQ[536384001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888942.453499]  SEQ[536448001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888942.499716]  SEQ[536576001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888942.505518]  SEQ[536640001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888942.538073]  SEQ[536768001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888942.583855]  SEQ[536832001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888942.599822]  SEQ[536896001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888942.639294]  SEQ[537088001]  CHANGE[192000]  VARIATION[128000]
Packet 24 : TIME[1702888942.661800]  SEQ[537152001]  CHANGE[64000]  VARIATION[128000]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 15 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888873.184788]  SEQ[413312001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888873.195169]  SEQ[413376001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888873.228389]  SEQ[413504001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888873.238447]  SEQ[413696001]  CHANGE[192000]  VARIATION[64000]
Packet  5 : TIME[1702888873.333088]  SEQ[413888001]  CHANGE[192000]  VARIATION[0]
Packet  6 : TIME[1702888873.386260]  SEQ[414336001]  CHANGE[448000]  VARIATION[256000]
Packet  7 : TIME[1702888873.443426]  SEQ[414656001]  CHANGE[320000]  VARIATION[128000]
Packet  8 : TIME[1702888873.473520]  SEQ[414848001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888873.484464]  SEQ[415168001]  CHANGE[320000]  VARIATION[128000]
Packet 10 : TIME[1702888873.492550]  SEQ[415296001]  CHANGE[128000]  VARIATION[192000]
Packet 11 : TIME[1702888873.527679]  SEQ[415488001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888873.675299]  SEQ[415872001]  CHANGE[384000]  VARIATION[192000]
Packet 13 : TIME[1702888873.706236]  SEQ[416384001]  CHANGE[512000]  VARIATION[128000]
Packet 14 : TIME[1702888873.859196]  SEQ[416896001]  CHANGE[512000]  VARIATION[0]
Packet 15 : TIME[1702888873.914380]  SEQ[417152001]  CHANGE[256000]  VARIATION[256000]
Packet 16 : TIME[1702888873.949398]  SEQ[417216001]  CHANGE[64000]  VARIATION[192000]
Packet 17 : TIME[1702888873.977452]  SEQ[417408001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888874. 43128]  SEQ[417472001]  CHANGE[64000]  VARIATION[128000]
Packet 19 : TIME[1702888874. 54458]  SEQ[417536001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888874. 64363]  SEQ[417600001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888874. 84980]  SEQ[417664001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888874.157421]  SEQ[417856001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888874.209728]  SEQ[417920001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888874.218234]  SEQ[418112001]  CHANGE[192000]  VARIATION[128000]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Ubuntu Linux 22.04.1,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,56,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888851. 41126]  SEQ[372544001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888851. 46933]  SEQ[372608001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888851. 56230]  SEQ[372672001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888851. 66902]  SEQ[372736001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888851. 75461]  SEQ[372800001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888851.237238]  SEQ[372864001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888851.377803]  SEQ[372992001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888851.421527]  SEQ[373056001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888851.441926]  SEQ[373184001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888851.449368]  SEQ[373248001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888851.488714]  SEQ[373440001]  CHANGE[192000]  VARIATION[128000]
Packet 12 : TIME[1702888851.502526]  SEQ[373504001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888851.511600]  SEQ[373568001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888851.530360]  SEQ[373632001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888851.521587]  SEQ[373696001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888851.592229]  SEQ[373760001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888851.599712]  SEQ[373888001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888851.618584]  SEQ[373952001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888851.639432]  SEQ[374016001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888851.657339]  SEQ[374144001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888851.664939]  SEQ[374208001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888851.689366]  SEQ[374272001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888851.695691]  SEQ[374336001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888851.710595]  SEQ[374464001]  CHANGE[128000]  VARIATION[64000]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34440044,azrcisvdwvmdr10.internal.cloudapp.net,10.198.80.77,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888888.930762]  SEQ[456832001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888888.940436]  SEQ[456960001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888888.950342]  SEQ[457024001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888888.966941]  SEQ[457088001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889. 15170]  SEQ[457280001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888889. 46518]  SEQ[457472001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888889. 54315]  SEQ[457536001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888889. 64859]  SEQ[457664001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888889. 70537]  SEQ[457728001]  CHANGE[64000]  VARIATION[64000]
Packet 10 : TIME[1702888889. 76315]  SEQ[457792001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888889. 85582]  SEQ[457920001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888889. 92908]  SEQ[457984001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888889.111195]  SEQ[458048001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888889.104529]  SEQ[458176001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888889.129765]  SEQ[458304001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888889.144323]  SEQ[458368001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1702888889.152488]  SEQ[458432001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888889.192293]  SEQ[458624001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888889.203687]  SEQ[458752001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888889.226038]  SEQ[458880001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888889.239296]  SEQ[459008001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888889.253556]  SEQ[459072001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888889.261189]  SEQ[459200001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888889.278517]  SEQ[459328001]  CHANGE[128000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.180463]  SEQ[558400001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.190374]  SEQ[558464001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.207597]  SEQ[558528001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.229279]  SEQ[558592001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.290470]  SEQ[558912001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888956.298069]  SEQ[558976001]  CHANGE[64000]  VARIATION[256000]
Packet  7 : TIME[1702888956.306420]  SEQ[559104001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888956.367382]  SEQ[559168001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888956.376466]  SEQ[559360001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888956.383866]  SEQ[559424001]  CHANGE[64000]  VARIATION[128000]
Packet 11 : TIME[1702888956.394180]  SEQ[559552001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888956.407505]  SEQ[559680001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888956.452365]  SEQ[559872001]  CHANGE[192000]  VARIATION[64000]
Packet 14 : TIME[1702888956.461887]  SEQ[560000001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888956.514376]  SEQ[560128001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.547156]  SEQ[560256001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.568462]  SEQ[560384001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.580722]  SEQ[560512001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888956.587688]  SEQ[560704001]  CHANGE[192000]  VARIATION[64000]
Packet 20 : TIME[1702888956.593569]  SEQ[560768001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888956.609728]  SEQ[560832001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.638134]  SEQ[561088001]  CHANGE[256000]  VARIATION[192000]
Packet 23 : TIME[1702888956.646020]  SEQ[561216001]  CHANGE[128000]  VARIATION[128000]
Packet 24 : TIME[1702888956.654106]  SEQ[561280001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34295169,azrcisvdwvmdr07.internal.cloudapp.net,10.198.80.74,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888886.764282]  SEQ[450112001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888886.771244]  SEQ[450176001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888886.780512]  SEQ[450240001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888886.829782]  SEQ[450304001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888886.847775]  SEQ[450496001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888886.870562]  SEQ[450624001]  CHANGE[128000]  VARIATION[64000]
Packet  7 : TIME[1702888886.879520]  SEQ[450688001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888886.952252]  SEQ[450752001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888886.961976]  SEQ[450944001]  CHANGE[192000]  VARIATION[128000]
Packet 10 : TIME[1702888887. 22605]  SEQ[451072001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888887. 52413]  SEQ[451264001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888887. 63215]  SEQ[451328001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888887. 78436]  SEQ[451392001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888887.120648]  SEQ[451648001]  CHANGE[256000]  VARIATION[192000]
Packet 15 : TIME[1702888887.126956]  SEQ[451712001]  CHANGE[64000]  VARIATION[192000]
Packet 16 : TIME[1702888887.136385]  SEQ[451776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888887.151534]  SEQ[451840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888887.165518]  SEQ[451968001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888887.179582]  SEQ[452096001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888887.213825]  SEQ[452288001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888887.222758]  SEQ[452352001]  CHANGE[64000]  VARIATION[128000]
Packet 22 : TIME[1702888887.240436]  SEQ[452416001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888887.260538]  SEQ[452544001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888887.270801]  SEQ[452608001]  CHANGE[64000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 20 out of 23 events.
Packet  1 : TIME[1702888953.614293]  SEQ[554816001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888953.622870]  SEQ[554880001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888953.663429]  SEQ[555008001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888953.673371]  SEQ[555072001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888953.707879]  SEQ[555136001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888953.729051]  SEQ[555200001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888953.791500]  SEQ[555328001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888953.800991]  SEQ[555392001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888953.826335]  SEQ[555456001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888953.876424]  SEQ[555520001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888953.991184]  SEQ[555648001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888954.  6572]  SEQ[555776001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888954. 85927]  SEQ[555840001]  CHANGE[64000]  VARIATION[64000]
Packet 14 : TIME[1702888954.117316]  SEQ[555968001]  CHANGE[128000]  VARIATION[64000]
Packet 15 : TIME[1702888954.126328]  SEQ[556096001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888954.162416]  SEQ[556288001]  CHANGE[192000]  VARIATION[64000]
Packet 17 : TIME[1702888954.174524]  SEQ[556416001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888954.237508]  SEQ[556480001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888954.259588]  SEQ[556608001]  CHANGE[128000]  VARIATION[64000]
Packet 20 : TIME[1702888954.319051]  SEQ[556736001]  CHANGE[128000]  VARIATION[0]
Packet 21 : TIME[1702888954.443428]  SEQ[556800001]  CHANGE[64000]  VARIATION[64000]
Packet 22 : TIME[1702888954.451332]  SEQ[556992001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888954.471801]  SEQ[557120001]  CHANGE[128000]  VARIATION[64000]
Packet 24 : TIME[1702888954.525300]  SEQ[557184001]  CHANGE[64000]  VARIATION[64000]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34410081,azrcisvdwvmdr08.internal.cloudapp.net,10.198.80.75,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888881.590636]  SEQ[434240001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888881.609020]  SEQ[434304001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888881.635483]  SEQ[434496001]  CHANGE[192000]  VARIATION[128000]
Packet  4 : TIME[1702888881.668752]  SEQ[434560001]  CHANGE[64000]  VARIATION[128000]
Packet  5 : TIME[1702888881.677584]  SEQ[434624001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888881.724428]  SEQ[434688001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888881.785404]  SEQ[434944001]  CHANGE[256000]  VARIATION[192000]
Packet  8 : TIME[1702888881.860449]  SEQ[435072001]  CHANGE[128000]  VARIATION[128000]
Packet  9 : TIME[1702888881.871304]  SEQ[435264001]  CHANGE[192000]  VARIATION[64000]
Packet 10 : TIME[1702888881.920267]  SEQ[435456001]  CHANGE[192000]  VARIATION[0]
Packet 11 : TIME[1702888882. 38706]  SEQ[435584001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888882.121481]  SEQ[435712001]  CHANGE[128000]  VARIATION[0]
Packet 13 : TIME[1702888882.161563]  SEQ[435968001]  CHANGE[256000]  VARIATION[128000]
Packet 14 : TIME[1702888882.170307]  SEQ[436160001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888882.183020]  SEQ[436224001]  CHANGE[64000]  VARIATION[128000]
Packet 16 : TIME[1702888882.267445]  SEQ[436288001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888882.282593]  SEQ[436480001]  CHANGE[192000]  VARIATION[128000]
Packet 18 : TIME[1702888882.324642]  SEQ[436608001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888882.366719]  SEQ[436672001]  CHANGE[64000]  VARIATION[64000]
Packet 20 : TIME[1702888882.375572]  SEQ[436736001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888882.422265]  SEQ[436800001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888882.490417]  SEQ[436928001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888882.524081]  SEQ[437120001]  CHANGE[192000]  VARIATION[64000]
Packet 24 : TIME[1702888882.590667]  SEQ[437312001]  CHANGE[192000]  VARIATION[0]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888949.479737]  SEQ[549504001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888949.486780]  SEQ[549568001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888949.503184]  SEQ[549632001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888949.577625]  SEQ[549696001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888949.585746]  SEQ[549824001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888949.593099]  SEQ[549888001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888949.601422]  SEQ[550016001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888949.614215]  SEQ[550080001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888949.623409]  SEQ[550144001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888949.633339]  SEQ[550208001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1702888949.641540]  SEQ[550336001]  CHANGE[128000]  VARIATION[64000]
Packet 12 : TIME[1702888949.649154]  SEQ[550400001]  CHANGE[64000]  VARIATION[64000]
Packet 13 : TIME[1702888949.662100]  SEQ[550464001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888949.679952]  SEQ[550528001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888949.689393]  SEQ[550592001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888949.710489]  SEQ[550656001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888949.786458]  SEQ[550720001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888949.880457]  SEQ[550848001]  CHANGE[128000]  VARIATION[64000]
Packet 19 : TIME[1702888949.889299]  SEQ[550976001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888949.899298]  SEQ[551040001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888949.969523]  SEQ[551104001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888949.976862]  SEQ[551168001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1702888950.  4124]  SEQ[551232001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888950. 89876]  SEQ[551296001]  CHANGE[64000]  VARIATION[0]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34292366,azrcisvdwvmdr11.internal.cloudapp.net,10.198.80.78,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 20 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888880.667498]  SEQ[430720001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888880.676421]  SEQ[430784001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888880.695266]  SEQ[430912001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888880.705265]  SEQ[431040001]  CHANGE[128000]  VARIATION[0]
Packet  5 : TIME[1702888880.758628]  SEQ[431168001]  CHANGE[128000]  VARIATION[0]
Packet  6 : TIME[1702888880.777700]  SEQ[431232001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888880.821523]  SEQ[431296001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888880.829669]  SEQ[431360001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888880.857290]  SEQ[431488001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888880.884432]  SEQ[431680001]  CHANGE[192000]  VARIATION[64000]
Packet 11 : TIME[1702888880.921682]  SEQ[431872001]  CHANGE[192000]  VARIATION[0]
Packet 12 : TIME[1702888880.930277]  SEQ[431936001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888880.941148]  SEQ[432000001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888880.974508]  SEQ[432064001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888880.983144]  SEQ[432128001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888881. 58402]  SEQ[432192001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888881. 67287]  SEQ[432320001]  CHANGE[128000]  VARIATION[64000]
Packet 18 : TIME[1702888881. 88352]  SEQ[432384001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888881.103955]  SEQ[432448001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888881.114833]  SEQ[432512001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1702888881.153287]  SEQ[432640001]  CHANGE[128000]  VARIATION[64000]
Packet 22 : TIME[1702888881.168548]  SEQ[432704001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888881.178717]  SEQ[432768001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888881.219136]  SEQ[432896001]  CHANGE[128000]  VARIATION[64000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888947.714658]  SEQ[545856001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888947.732630]  SEQ[545920001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888947.783170]  SEQ[546048001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888947.949196]  SEQ[546112001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888947.957394]  SEQ[546240001]  CHANGE[128000]  VARIATION[64000]
Packet  6 : TIME[1702888947.983636]  SEQ[546304001]  CHANGE[64000]  VARIATION[64000]
Packet  7 : TIME[1702888948. 95421]  SEQ[546368001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888948.105435]  SEQ[546496001]  CHANGE[128000]  VARIATION[64000]
Packet  9 : TIME[1702888948.145413]  SEQ[546624001]  CHANGE[128000]  VARIATION[0]
Packet 10 : TIME[1702888948.161746]  SEQ[546752001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888948.181452]  SEQ[546816001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888948.225564]  SEQ[546944001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888948.232583]  SEQ[547072001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888948.240198]  SEQ[547136001]  CHANGE[64000]  VARIATION[64000]
Packet 15 : TIME[1702888948.254560]  SEQ[547264001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1702888948.266591]  SEQ[547392001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888948.299407]  SEQ[547520001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888948.316283]  SEQ[547584001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888948.333402]  SEQ[547776001]  CHANGE[192000]  VARIATION[128000]
Packet 20 : TIME[1702888948.427744]  SEQ[547840001]  CHANGE[64000]  VARIATION[128000]
Packet 21 : TIME[1702888948.460568]  SEQ[547904001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888948.479481]  SEQ[548032001]  CHANGE[128000]  VARIATION[64000]
Packet 23 : TIME[1702888948.593154]  SEQ[548288001]  CHANGE[256000]  VARIATION[128000]
Packet 24 : TIME[1702888948.678552]  SEQ[548608001]  CHANGE[320000]  VARIATION[64000]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34433862,azrcisvdwvmdr09.internal.cloudapp.net,10.198.80.76,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 19 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888889.383454]  SEQ[460096001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888889.395299]  SEQ[460160001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888889.406197]  SEQ[460224001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888889.428171]  SEQ[460288001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888889.480929]  SEQ[460608001]  CHANGE[320000]  VARIATION[256000]
Packet  6 : TIME[1702888889.492474]  SEQ[460736001]  CHANGE[128000]  VARIATION[192000]
Packet  7 : TIME[1702888889.525370]  SEQ[460800001]  CHANGE[64000]  VARIATION[64000]
Packet  8 : TIME[1702888889.533142]  SEQ[460864001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888889.541268]  SEQ[460928001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1702888889.554343]  SEQ[461056001]  CHANGE[128000]  VARIATION[64000]
Packet 11 : TIME[1702888889.562272]  SEQ[461120001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888889.598266]  SEQ[461248001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888889.612336]  SEQ[461376001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888889.661074]  SEQ[461504001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888889.668089]  SEQ[461568001]  CHANGE[64000]  VARIATION[64000]
Packet 16 : TIME[1702888889.680681]  SEQ[461696001]  CHANGE[128000]  VARIATION[64000]
Packet 17 : TIME[1702888889.693184]  SEQ[461824001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888889.722488]  SEQ[461952001]  CHANGE[128000]  VARIATION[0]
Packet 19 : TIME[1702888889.735146]  SEQ[462080001]  CHANGE[128000]  VARIATION[0]
Packet 20 : TIME[1702888889.747270]  SEQ[462144001]  CHANGE[64000]  VARIATION[64000]
Packet 21 : TIME[1702888889.754767]  SEQ[462208001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888889.788853]  SEQ[462400001]  CHANGE[192000]  VARIATION[128000]
Packet 23 : TIME[1702888889.842301]  SEQ[462464001]  CHANGE[64000]  VARIATION[128000]
Packet 24 : TIME[1702888889.897738]  SEQ[462784001]  CHANGE[320000]  VARIATION[256000]
Constant changes in initial sequence numbers observed in 18 out of 23 events.
Packet  1 : TIME[1702888956.269552]  SEQ[558656001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888956.276671]  SEQ[558720001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888956.284341]  SEQ[558784001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1702888956.293096]  SEQ[558848001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1702888956.302780]  SEQ[559040001]  CHANGE[192000]  VARIATION[128000]
Packet  6 : TIME[1702888956.353488]  SEQ[559232001]  CHANGE[192000]  VARIATION[0]
Packet  7 : TIME[1702888956.369766]  SEQ[559296001]  CHANGE[64000]  VARIATION[128000]
Packet  8 : TIME[1702888956.386421]  SEQ[559488001]  CHANGE[192000]  VARIATION[128000]
Packet  9 : TIME[1702888956.394149]  SEQ[559616001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888956.402337]  SEQ[559744001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888956.435523]  SEQ[559808001]  CHANGE[64000]  VARIATION[64000]
Packet 12 : TIME[1702888956.443890]  SEQ[559936001]  CHANGE[128000]  VARIATION[64000]
Packet 13 : TIME[1702888956.500993]  SEQ[560064001]  CHANGE[128000]  VARIATION[0]
Packet 14 : TIME[1702888956.550769]  SEQ[560192001]  CHANGE[128000]  VARIATION[0]
Packet 15 : TIME[1702888956.568525]  SEQ[560320001]  CHANGE[128000]  VARIATION[0]
Packet 16 : TIME[1702888956.580725]  SEQ[560448001]  CHANGE[128000]  VARIATION[0]
Packet 17 : TIME[1702888956.586341]  SEQ[560576001]  CHANGE[128000]  VARIATION[0]
Packet 18 : TIME[1702888956.593493]  SEQ[560640001]  CHANGE[64000]  VARIATION[64000]
Packet 19 : TIME[1702888956.616654]  SEQ[560896001]  CHANGE[256000]  VARIATION[192000]
Packet 20 : TIME[1702888956.625664]  SEQ[560960001]  CHANGE[64000]  VARIATION[192000]
Packet 21 : TIME[1702888956.641245]  SEQ[561024001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1702888956.657276]  SEQ[561344001]  CHANGE[320000]  VARIATION[256000]
Packet 23 : TIME[1702888956.668110]  SEQ[561472001]  CHANGE[128000]  VARIATION[192000]
Packet 24 : TIME[1702888956.690158]  SEQ[561600001]  CHANGE[128000]  VARIATION[0]
"
82005,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",Predictable TCP Initial Sequence Numbers Vulnerability,Active,Vuln,2,,,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,"CVE-1999-0077, CVE-2000-0328, CVE-2000-0916, CVE-2001-0328","MS99-046, cisco-sa-20010301","2682, 604, 1766","This server uses TCP/IP implementation that respects the ""64K rule"", or a ""time dependent rule"" for generating TCP sequence numbers.  Unauthorized users can predict sequence numbers when two hosts are communicating, and connect to your server from any source IP address.  The only difference with a legitimate connection is that the attacker will not see the replies sent back to the authorized user whose IP was forged.","The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
 
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to ""complete"" a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.","You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
 This cert advisory describes how to fix this issue : CA-2001-09 (http://www.cert.org/advisories/CA-2001-09.html)
 For Microsoft systems you can apply this patch : MS99-046 (https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046): How to Prevent Predictable TCP/IP Initial Sequence Numbers
 For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random (http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random): Cisco IOS Software TCP Initial Sequence Number Randomization Improvements","Source: The Exploit-DB
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number - The Exploit-DB Ref : 19522
Link:http://www.exploit-db.com/exploits/19522

Source: exploitdb
Reference:CVE-1999-0077
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2000-0916
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522
Reference:CVE-2001-0328
Description:Linux Kernel 2.2 - Predictable TCP Initial Sequence Number
Link:https://www.exploit-db.com/exploits/19522

Source: seebug
Reference:CVE-2000-0916
Description:Linux kernel 2.2 Predictable TCP Initial Sequence Number Vulnerability
Link:https://www.seebug.org/vuldb/ssvid-73444","Constant changes in initial sequence numbers observed in 21 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1715231241.704449]  SEQ[43328001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1715231241.712231]  SEQ[43392001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1715231241.720226]  SEQ[43456001]  CHANGE[64000]  VARIATION[0]
Packet  4 : TIME[1715231241.727492]  SEQ[43520001]  CHANGE[64000]  VARIATION[0]
Packet  5 : TIME[1715231241.734791]  SEQ[43584001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1715231241.742275]  SEQ[43648001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1715231241.749152]  SEQ[43712001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1715231241.756473]  SEQ[43776001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1715231241.762795]  SEQ[43840001]  CHANGE[64000]  VARIATION[0]
Packet 10 : TIME[1715231241.769055]  SEQ[43904001]  CHANGE[64000]  VARIATION[0]
Packet 11 : TIME[1715231241.776476]  SEQ[43968001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1715231241.784388]  SEQ[44032001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1715231241.790690]  SEQ[44096001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1715231241.797320]  SEQ[44160001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1715231241.804282]  SEQ[44288001]  CHANGE[128000]  VARIATION[64000]
Packet 16 : TIME[1715231241.810961]  SEQ[44352001]  CHANGE[64000]  VARIATION[64000]
Packet 17 : TIME[1715231241.818319]  SEQ[44416001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1715231241.825204]  SEQ[44480001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1715231241.830986]  SEQ[44544001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1715231241.838213]  SEQ[44608001]  CHANGE[64000]  VARIATION[0]
Packet 21 : TIME[1715231241.844969]  SEQ[44672001]  CHANGE[64000]  VARIATION[0]
Packet 22 : TIME[1715231241.852296]  SEQ[44736001]  CHANGE[64000]  VARIATION[0]
Packet 23 : TIME[1715231241.859526]  SEQ[44800001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1715231241.865402]  SEQ[44864001]  CHANGE[64000]  VARIATION[0]#",yes,,,TCP/IP,42,492,4,492,Predictable TCP Initial Sequence Numbers Vulnerability,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34443229,azrcisvdwvmdr12.internal.cloudapp.net,10.198.80.79,,"You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
This cert advisory describes how to fix this issue : CA-2001-09
For Microsoft systems you can apply this patch : MS99-046: How to Prevent Predictable TCP/IP Initial Sequence Numbers
For Cisco IOS systems you can apply this patch : cisco-sa-20010301-ios-tcp-isn-random: Cisco IOS Software TCP Initial Sequence Number Randomization Improvements(You may need to upgrade your Operating System to change the behavior of your TCP/IP stack regarding this problem.
http://www.cert.org/advisories/CA-2001-09.html
https://docs.microsoft.com/en-us/security-updates/securitybulletins/1999/ms99-046
http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20010301-ios-tcp-isn-random)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,42,MEDIUM,164,"Jan 1, 1999",'-,TCP/IP,"Easy Exploit,Patch Not Available,Public Exploit,Unauthenticated Exploitation",Windows Server 2019 Datacenter Version 1809 Build 17763 UBR 5122,'-,'-,1,"The Initial Sequence Number (ISN) used in TCP/IP sessions should be as random as possible in order to prevent attacks such as IP address spoofing and session hijacking. 
<P>
If the ISN of an existing or future TCP connection can be determined within some practical range, a malicious agent may be able to close or hijack the TCP connections. If the ISNs of future connections of a system are guessed exactly, an agent may be able to &quot;complete&quot; a TCP three-way handshake, establish a phantom connection, and spoof TCP packets delivered to a victim.",No,4,50,,"Constant changes in initial sequence numbers observed in 16 out of 23 events.

[ Sent Packets Results ]

Packet  1 : TIME[1702888872. 98615]  SEQ[409984001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888872.172076]  SEQ[410112001]  CHANGE[128000]  VARIATION[N/A]
Packet  3 : TIME[1702888872.214635]  SEQ[410176001]  CHANGE[64000]  VARIATION[64000]
Packet  4 : TIME[1702888872.291281]  SEQ[410304001]  CHANGE[128000]  VARIATION[64000]
Packet  5 : TIME[1702888872.301234]  SEQ[410368001]  CHANGE[64000]  VARIATION[64000]
Packet  6 : TIME[1702888872.311466]  SEQ[410432001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888872.360934]  SEQ[410560001]  CHANGE[128000]  VARIATION[64000]
Packet  8 : TIME[1702888872.414307]  SEQ[410624001]  CHANGE[64000]  VARIATION[64000]
Packet  9 : TIME[1702888872.439596]  SEQ[410752001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888872.466404]  SEQ[410880001]  CHANGE[128000]  VARIATION[0]
Packet 11 : TIME[1702888872.478370]  SEQ[411072001]  CHANGE[192000]  VARIATION[64000]
Packet 12 : TIME[1702888872.489346]  SEQ[411136001]  CHANGE[64000]  VARIATION[128000]
Packet 13 : TIME[1702888872.547568]  SEQ[411264001]  CHANGE[128000]  VARIATION[64000]
Packet 14 : TIME[1702888872.694679]  SEQ[411456001]  CHANGE[192000]  VARIATION[64000]
Packet 15 : TIME[1702888872.777941]  SEQ[411648001]  CHANGE[192000]  VARIATION[0]
Packet 16 : TIME[1702888872.881383]  SEQ[412032001]  CHANGE[384000]  VARIATION[192000]
Packet 17 : TIME[1702888872.950606]  SEQ[412352001]  CHANGE[320000]  VARIATION[64000]
Packet 18 : TIME[1702888873. 60142]  SEQ[412544001]  CHANGE[192000]  VARIATION[128000]
Packet 19 : TIME[1702888873.109425]  SEQ[412800001]  CHANGE[256000]  VARIATION[64000]
Packet 20 : TIME[1702888873.115578]  SEQ[412992001]  CHANGE[192000]  VARIATION[64000]
Packet 21 : TIME[1702888873.160576]  SEQ[413184001]  CHANGE[192000]  VARIATION[0]
Packet 22 : TIME[1702888873.207465]  SEQ[413440001]  CHANGE[256000]  VARIATION[64000]
Packet 23 : TIME[1702888873.256105]  SEQ[413760001]  CHANGE[320000]  VARIATION[64000]
Packet 24 : TIME[1702888873.326526]  SEQ[414208001]  CHANGE[448000]  VARIATION[128000]
Constant changes in initial sequence numbers observed in 21 out of 23 events.
Packet  1 : TIME[1702888941.117486]  SEQ[530688001]  CHANGE[N/A]  VARIATION[N/A]
Packet  2 : TIME[1702888941.171323]  SEQ[530752001]  CHANGE[64000]  VARIATION[N/A]
Packet  3 : TIME[1702888941.178179]  SEQ[530880001]  CHANGE[128000]  VARIATION[64000]
Packet  4 : TIME[1702888941.185188]  SEQ[530944001]  CHANGE[64000]  VARIATION[64000]
Packet  5 : TIME[1702888941.202478]  SEQ[531008001]  CHANGE[64000]  VARIATION[0]
Packet  6 : TIME[1702888941.295299]  SEQ[531072001]  CHANGE[64000]  VARIATION[0]
Packet  7 : TIME[1702888941.310901]  SEQ[531136001]  CHANGE[64000]  VARIATION[0]
Packet  8 : TIME[1702888941.346648]  SEQ[531200001]  CHANGE[64000]  VARIATION[0]
Packet  9 : TIME[1702888941.411200]  SEQ[531328001]  CHANGE[128000]  VARIATION[64000]
Packet 10 : TIME[1702888941.470547]  SEQ[531392001]  CHANGE[64000]  VARIATION[64000]
Packet 11 : TIME[1702888941.503291]  SEQ[531456001]  CHANGE[64000]  VARIATION[0]
Packet 12 : TIME[1702888941.535267]  SEQ[531520001]  CHANGE[64000]  VARIATION[0]
Packet 13 : TIME[1702888941.542122]  SEQ[531584001]  CHANGE[64000]  VARIATION[0]
Packet 14 : TIME[1702888941.549271]  SEQ[531648001]  CHANGE[64000]  VARIATION[0]
Packet 15 : TIME[1702888941.568960]  SEQ[531712001]  CHANGE[64000]  VARIATION[0]
Packet 16 : TIME[1702888941.576459]  SEQ[531776001]  CHANGE[64000]  VARIATION[0]
Packet 17 : TIME[1702888941.591392]  SEQ[531840001]  CHANGE[64000]  VARIATION[0]
Packet 18 : TIME[1702888941.609218]  SEQ[531904001]  CHANGE[64000]  VARIATION[0]
Packet 19 : TIME[1702888941.625721]  SEQ[531968001]  CHANGE[64000]  VARIATION[0]
Packet 20 : TIME[1702888941.634361]  SEQ[532096001]  CHANGE[128000]  VARIATION[64000]
Packet 21 : TIME[1702888941.658345]  SEQ[532224001]  CHANGE[128000]  VARIATION[0]
Packet 22 : TIME[1702888941.739518]  SEQ[532288001]  CHANGE[64000]  VARIATION[64000]
Packet 23 : TIME[1702888941.777967]  SEQ[532352001]  CHANGE[64000]  VARIATION[0]
Packet 24 : TIME[1702888941.820583]  SEQ[532480001]  CHANGE[128000]  VARIATION[64000]
"
38909,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,Active,Vuln,2,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,492,4,492,SHA1 deprecated setting for SSH,2,2,Confirmed,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,167,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,5,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,492,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,Active,Vuln,2,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,492,4,492,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 20, 2023","Dec 20, 2023",TCP,22,NEW,34450843,metasploitable.localdomain,10.198.80.80,,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team",No,No,45,MEDIUM,162,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 8.04,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,2,344,,"#table cols=""2""
Type Name
key_exchange diffie-hellman-group-exchange-sha1
key_exchange diffie-hellman-group14-sha1
key_exchange diffie-hellman-group1-sha1
host_key ssh-rsa
host_key ssh-dss
MAC hmac-sha1
MAC hmac-sha1-96
"
38909,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,Active,Vuln,2,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,492,4,492,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,Active,Vuln,2,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,492,4,492,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,Active,Vuln,2,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,492,4,492,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,"Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38909,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",SHA1 deprecated setting for SSH,Active,Vuln,2,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,,,,"The SSH protocol (Secure Shell) is a method for secure remote login from one computer to another. 
The target is using deprecated SHA1 cryptographic settings to communicate.","vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.","Avoid using deprecated cryptographic settings.  
Use best practices when configuring SSH. 
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) (https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm) . 

Other documents to refer 
Deprecate settings listed for red hat (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7) 
Key exchange  (https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html) 
CBC Cipher  (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161)  


Settings currently considered deprecated: 

1.Key exchange algorithms: 
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*. 

2.MAC: 
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com 

3.Host key: 
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com",,"Type	Name
MAC	hmac-sha1-etm@openssh.com
MAC	hmac-sha1#",no,,,General remote services,45,492,4,492,SHA1 deprecated setting for SSH,2,2,Confirmed,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Avoid using deprecated cryptographic settings. 
Use best practices when configuring SSH.
Refer to NIST Retires SHA-1 Cryptographic Algorithm (SSH) .

Other documents to refer
Deprecate settings listed for red hat
Key exchange 
CBC Cipher  


Settings currently considered deprecated:

1.Key exchange algorithms:
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.

2.MAC:
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com

3.Host key:
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com(Avoid using deprecated cryptographic settings. <P>
Use best practices when configuring SSH.<P>
https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm

Other documents to refer<BR>
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.4_release_notes/chap-red_hat_enterprise_linux-7.4_release_notes-deprecated_functionality_in_rhel7
https://www.ietf.org/archive/id/draft-ietf-curdle-ssh-kex-sha2-13.html
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5161


Settings currently considered deprecated:<P>

1.Key exchange algorithms:<BR>
diffie-hellman-group1-sha1, rsa1024sha1, diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha1, gss-gex-sha1-*, gss-group1-sha1-* and gss-group14-sha1-*.<P>

2.MAC:<BR>
 hmac-sha1, hmac-sha1-96, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com<P>

3.Host key:<BR>
 ssh-rsa, ssh-dss, ssh-rsa-cert-v01@openssh.com, ssh-dss-cert-v01@openssh.com<P>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,45,MEDIUM,164,"Sep 28, 2023",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"vulnerable to collision attacks, which are designed to fabricate the same hash value for different input data.each hash is supposedly unique.",No,4,56,,"#table cols=""2""
Type Name
MAC hmac-sha1-etm@openssh.com
MAC hmac-sha1
"
38896,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,Active,Practice,5,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,492,4,492,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"May 9, 2024","Dec 15, 2023",TCP,22,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,167,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,5,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,492,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,Active,Practice,5,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,492,4,492,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34439654,azrcisvdlvmdr04.internal.cloudapp.net,10.198.80.71,fe80:0:0:0:6245:bdff:feaa:ef42,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,Active,Practice,5,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,492,4,492,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.3,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4
"
38896,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,Active,Practice,5,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,492,4,492,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34445624,azrcisvdlvmdr05.internal.cloudapp.net,10.198.80.72,fe80:0:0:0:6245:bdff:fee7:87bb,Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38896,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Sensitive Information Disclosure Vulnerability,Active,Practice,5,22,tcp,,,12/15/2023 16:36:05,05-09-2024 11:39,5,,CVE-2023-28531,OpenSSH Advisory,,"OpenSSH (OpenBSD Secure Shell) is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

Affected Versions: 
OpenSSH version 8.9 and above prior to 9.3 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.","Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).","Customers are advised to upgrade to OpenSSH 9.3 (https://www.openssh.com/txt/release-9.3) or later to remediate these vulnerabilities.
 Patch: 
Following are links for downloading patches to fix the vulnerabilities:
  CVE-2023-28531 (https://www.openssh.com/txt/release-9.3)",,Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4#,yes,,,General remote services,65,492,4,492,OpenSSH Sensitive Information Disclosure Vulnerability,5,5,Potential,"Dec 18, 2023","Dec 18, 2023",TCP,22,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d",Customers are advised to upgrade to OpenSSH 9.3 or later to remediate these vulnerabilities.(https://www.openssh.com/txt/release-9.3),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,65,MEDIUM,164,"May 22, 2023","Mar 15, 2023",General remote services,"Easy Exploit,Wormable,Unauthenticated Exploitation,Remote Code Execution",Ubuntu Linux 22.04.1,'-,'-,1,"Successfully exploitation of this vulnerability  could lead to disclosure of sensitive information, addition or modification of data, or Denial of Service (DoS).",No,4,56,,"Vulnerable OpenSSH version for sshd(8) detected on port 22 over TCP - SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.3
"
38919,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",OpenSSH Authentication Bypass Vulnerability,New,Practice,4,,,,,05-09-2024 11:39,05-09-2024 11:39,1,,CVE-2023-51767,OpenSSH 9.6,,"OpenSSH is a set of computer programs providing encrypted communication sessions over a computer network using the SSH protocol. 

In OpenSSH, when common types of DRAM are used, might allow row hammer attacks (for authentication bypass) because the integer value of authenticated in mm_answer_authpassword does not resist flips of a single bit. 

Affected Versions: 
OpenSSH up to version 9.6 

QID Detection Logic: 
This unauthenticated detection works by reviewing the version of the OpenSSH service.",Successful exploitation allows OS command injection and row hammer attacks for authentication bypass.,There are no vendor supplied patches available at this time.,,Vulnerable SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4 detected on port 22 over TCP.#,yes,,,General remote services,35,492,4,492,OpenSSH Authentication Bypass Vulnerability,4,4,Potential,"May 9, 2024","May 9, 2024",'-,'-,NEW,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,There are no vendor supplied patches available at this time.(There are no vendor supplied patches available at this time.),"IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,22,"Feb 15, 2024",'-,General remote services,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,1,Successful exploitation allows OS command injection and row hammer attacks for authentication bypass.<P>,No,4,492,,"Vulnerable SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.4 detected on port 22 over TCP.
"
115284,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",IP Forwarding Enabled,Active,Practice,2,,,,,12/18/2023 15:11:38,05-09-2024 11:39,3,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,492,4,492,IP Forwarding Enabled,2,2,Potential,"May 9, 2024","Dec 20, 2023",'-,'-,ACTIVE,34520172,metasploitable3-ub1404,"10.0.2.15,172.17.0.1,172.28.128.3","fe80:0:0:0:42:25ff:fe58:6144,fe80:0:0:0:a00:27ff:fe42:5179,fe80:0:0:0:a00:27ff:fea2:fe21,fe80:0:0:0:5c7d:faff:fe2c:40a0","Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","Cloud Agent,IMF,RiskSense,Linux Team",No,No,35,LOW,162,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 14.04,'-,'-,5,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,2,341,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
115284,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",IP Forwarding Enabled,Active,Practice,2,,,,,12/18/2023 15:11:38,05-09-2024 11:39,3,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,492,4,492,IP Forwarding Enabled,2,2,Potential,"May 9, 2024","Dec 18, 2023",'-,'-,ACTIVE,34317943,azrcisvdlvmdr01.internal.cloudapp.net,"10.198.80.68,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1,172.21.0.1,172.22.0.1,172.23.0.1",fe80:0:0:0:6245:bdff:fe71:fe82,"Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,164,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,3,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,4,492,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
115284,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",IP Forwarding Enabled,Active,Practice,2,,,,,12/18/2023 15:11:38,05-09-2024 11:39,3,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,492,4,492,IP Forwarding Enabled,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34340954,azrcisvdlvmdr02.internal.cloudapp.net,"10.198.80.69,172.17.0.1,172.18.0.1","fe80:0:0:0:42:38ff:fe0b:489b,fe80:0:0:0:42:50ff:feea:fb95,fe80:0:0:0:a0:73ff:fe7c:69e2,fe80:0:0:0:6245:bdff:fea5:ecae","Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,164,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.3,'-,'-,1,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,4,56,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
115284,10.198.80.68,Global Default Network,azrcisvdlvmdr01.internal.cloudapp.net,440B4DD9CC68,,,IP,Ubuntu Linux 22.04.3,"host scanned, found vuln",IP Forwarding Enabled,Active,Practice,2,,,,,12/18/2023 15:11:38,05-09-2024 11:39,3,,CVE-1999-0511,,,"If this machine is not a router or a firewall, then IP forwarding should not be activated.
 
Note: Disabling IP Forward on containers and/or Kubernetes hosts may cause issues and may not be applicable.","If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.","Disable IP forwarding by following the appropriate instructions below: 
 
 On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
 On Linux, insert this line in your startup script: ""sysctl -w net.ipv4.ip_forward=0""
 On Solaris, HP-UX insert this line in your startup script: ""ndd -set /dev/ip ip_forwarding 0""
 On Mac OS X, insert this line in your startup script: ""sysctl -w net.inet.ip.forwarding=0""",,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1#",yes,,,Local,35,492,4,492,IP Forwarding Enabled,2,2,Potential,"Dec 18, 2023","Dec 18, 2023",'-,'-,NEW,34296765,azrcisvdlvmdr03.internal.cloudapp.net,"10.198.80.70,172.17.0.1,172.18.0.1,172.19.0.1,172.20.0.1","fe80:0:0:0:42:44ff:fe2b:1d85,fe80:0:0:0:4401:efff:fe32:e679,fe80:0:0:0:6245:bdff:fea5:ea7d","Disable IP forwarding by following the appropriate instructions below: 

On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
(Disable IP forwarding by following the appropriate instructions below: 
<UL>
<LI>On Windows set the value of the following registry key to zero:  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter
<LI>On Linux, insert this line in your startup script: &quot;sysctl -w net.ipv4.ip_forward=0&quot;
<LI>On Solaris, HP-UX insert this line in your startup script: &quot;ndd -set /dev/ip ip_forwarding 0&quot;
<LI>On Mac OS X, insert this line in your startup script: &quot;sysctl -w net.inet.ip.forwarding=0&quot;
</UL>)","IMF,RiskSense,Linux Team,ATVM Lab",No,No,35,LOW,164,"Sep 29, 2005",'-,Local,"Easy Exploit,Patch Not Available",Ubuntu Linux 22.04.1,'-,'-,1,"If this machine is not intended to be a router, then it may allow a malicious user to access your internal network.",No,4,56,,"sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
"
